{"version":3,"file":"public/javascripts/app.js","sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7HA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/PA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA;AACA,CACA;AACA;AACA,CACA;AACA,CACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA,C,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA,C","sourcesContent":[" // Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Blue', length: '4:26' },\n       { name: 'Green', length: '3:14' },\n       { name: 'Red', length: '5:01' },\n       { name: 'Pink', length: '3:21'},\n       { name: 'Magenta', length: '2:15'}\n     ]\n };\n \n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\n\n var currentlyPlayingSong = null;\n\n var createSongRow = function(songNumber, songName, songLength) {\n   var template =\n       '<tr>'\n     + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n     + '  <td class=\"col-md-9\">' + songName + '</td>'\n     + '  <td class=\"col-md-2\">' + songLength + '</td>'\n     + '</tr>'\n     ;\n \n   var $row = $(template);\n \n   var onHover = function(event) {\n     songNumberCell = $(this).find('.song-number');\n     songNumber = songNumberCell.data('song-number');\n     if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n    }\n   };\n \n   var offHover = function(event) {\n    songNumberCell = $(this).find('.song-number');\n    songNumber = songNumberCell.data('song-number');\n    if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html(songNumber);\n    }\n   };\n\n   var clickHandler = function(event) {\n     songNumber = $(this).data('song-number');\n\n     if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n \n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n \n   $row.find('.song-number').click(clickHandler);\n   $row.hover(onHover, offHover);\n   return $row;\n };\n\n var changeAlbumView = function(album) {\n   // Update the album title\n   var $albumTitle = $('.album-title');\n   $albumTitle.text(album.name);\n \n   // Update the album artist\n   var $albumArtist = $('.album-artist');\n   $albumArtist.text(album.artist);\n \n   // Update the meta information\n   var $albumMeta = $('.album-meta-info');\n   $albumMeta.text(album.year + \" on \" + album.label);\n \n   // Update the album image\n   var $albumImage = $('.album-image img');\n   $albumImage.attr('src', album.albumArtUrl);\n \n   // Update the Song List\n   var $songList = $(\".album-song-listing\");\n   $songList.empty();\n   var songs = album.songs;\n   for (var i = 0; i < songs.length; i++) {\n     var songData = songs[i];\n     var $newRow = createSongRow(i + 1, songData.name, songData.length);\n     $songList.append($newRow);\n   }\n\n\n \n };\n \n\n\nif (document.URL.match(/\\/album.html/)) {\n $(document).ready(function() {\n    changeAlbumView(albumMarconi);\n     });\n }\n","// Example album.\nvar albumPicasso = {\n    name: 'The Colors',\n    artist: 'Pablo Picasso',\n    label: 'Cubism',\n    year: '1881',\n    albumArtUrl: '/images/album-placeholder.png',\n\n    songs: [{\n        name: 'Blue',\n        length: '4:26',\n        audioUrl: '/music/placeholders/blue'\n    }, {\n        name: 'Green',\n        length: '3:14',\n        audioUrl: '/music/placeholders/green'\n    }, {\n        name: 'Red',\n        length: '5:01',\n        audioUrl: '/music/placeholders/red'\n    }, {\n        name: 'Pink',\n        length: '3:21',\n        audioUrl: '/music/placeholders/pink'\n    }, {\n        name: 'Magenta',\n        length: '2:15',\n        audioUrl: '/music/placeholders/magenta'\n    }]\n};\n\n\nblocJams = angular.module('BlocJams', ['ui.router']);\n\nblocJams.config(['$stateProvider', '$locationProvider',\n    function($stateProvider, $locationProvider) {\n        $locationProvider.html5Mode(true);\n\n        $stateProvider.state('landing', {\n            url: '/',\n            controller: 'Landing.controller',\n            templateUrl: '/templates/landing.html'\n        });\n\n        $stateProvider.state('collection', {\n            url: '/collection',\n            controller: 'Collection.controller',\n            templateUrl: '/templates/collection.html'\n        });\n\n\n        $stateProvider.state('album', {\n            url: '/album',\n            templateUrl: '/templates/album.html',\n            controller: 'Album.controller'\n        });\n\n    }\n]);\n\n// This is a cleaner way to call the controller than crowding it on the module definition.\nblocJams.controller('Landing.controller', ['$scope',\n    function($scope) {\n        $scope.subText = \"Turn the music up!\";\n\n        $scope.subTextClicked = function() {\n            $scope.subText += '!';\n        };\n\n        $scope.albumURLs = [\n            '/images/album-placeholders/album-1.jpg',\n            '/images/album-placeholders/album-2.jpg',\n            '/images/album-placeholders/album-3.jpg',\n            '/images/album-placeholders/album-4.jpg',\n            '/images/album-placeholders/album-5.jpg',\n            '/images/album-placeholders/album-6.jpg',\n            '/images/album-placeholders/album-7.jpg',\n            '/images/album-placeholders/album-8.jpg',\n            '/images/album-placeholders/album-9.jpg',\n        ];\n    }\n]);\n\nblocJams.controller('Collection.controller', ['$scope', 'SongPlayer',\n    function($scope, SongPlayer) {\n        $scope.albums = [];\n        for (var i = 0; i < 33; i++) {\n            $scope.albums.push(angular.copy(albumPicasso));\n        }\n\n        $scope.playAlbum = function(album) {\n            SongPlayer.setSong(album, album.songs[0]); // Targets first song in the array.\n        };\n\n    }\n]);\n\nblocJams.controller('Album.controller', ['$scope', 'SongPlayer',\n    function($scope, SongPlayer) {\n        $scope.album = angular.copy(albumPicasso);\n\n        var hoveredSong = null;\n\n        $scope.onHoverSong = function(song) {\n            hoveredSong = song;\n        };\n\n        $scope.offHoverSong = function(song) {\n            hoveredSong = null;\n        };\n\n        $scope.getSongState = function(song) {\n            if (song === SongPlayer.currentSong && SongPlayer.playing) {\n                return 'playing';\n            } else if (song === hoveredSong) {\n                return 'hovered';\n            }\n            return 'default';\n        };\n\n        $scope.playSong = function(song) {\n            SongPlayer.setSong($scope.album, song);\n        };\n\n        $scope.pauseSong = function(song) {\n            SongPlayer.pause();\n        };\n\n    }\n]);\n\nblocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer',\n    function($scope, SongPlayer) {\n        $scope.songPlayer = SongPlayer;\n    }\n]);\n\nblocJams.service('SongPlayer', function() {\n    var currentSoundFile = null;\n\n    var trackIndex = function(album, song) {\n        return album.songs.indexOf(song);\n    };\n\n    return {\n        currentSong: null,\n        currentAlbum: null,\n        playing: false,\n\n        play: function() {\n            this.playing = true;\n            currentSoundFile.play();\n        },\n        pause: function() {\n            this.playing = false;\n            currentSoundFile.pause();\n        },\n        next: function() {\n            var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n            currentTrackIndex++;\n            if (currentTrackIndex >= this.currentAlbum.songs.length) {\n                currentTrackIndex = 0;\n            }\n            var song = this.currentAlbum.songs[currentTrackIndex];\n            this.setSong(this.currentAlbum, song);\n        },\n        previous: function() {\n            var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n            currentTrackIndex--;\n            if (currentTrackIndex < 0) {\n                currentTrackIndex = this.currentAlbum.songs.length - 1;\n            }\n            var song = this.currentAlbum.songs[currentTrackIndex];\n            this.setSong(this.currentAlbum, song);\n        },\n        setSong: function(album, song) {\n            if (currentSoundFile) {\n                currentSoundFile.stop();\n            }\n            this.currentAlbum = album;\n            this.currentSong = song;\n            currentSoundFile = new buzz.sound(song.audioUrl, {\n                formats: [\"mp3\"],\n                preload: true\n            });\n\n            this.play();\n        }\n    };\n});\n\nblocJams.directive('slider', ['$document',\n            function($document) {\n\n                // Returns a number between 0 and 1 to determine where the mouse event happened along the slider bar.\n                var calculateSliderPercentFromMouseEvent = function($slider, event) {\n                    var offsetX = event.pageX - $slider.offset().left; // Distance from left\n                    var sliderWidth = $slider.width(); // Width of slider\n                    var offsetXPercent = (offsetX / sliderWidth);\n                    offsetXPercent = Math.max(0, offsetXPercent);\n                    offsetXPercent = Math.min(1, offsetXPercent);\n                    return offsetXPercent;\n                };\n\n\n                return {\n                    templateUrl: '/templates/directives/slider.html', // We'll create these files shortly.\n                    replace: true,\n                    restrict: 'E',\n                    scope: {},\n                    link: function(scope, element, attributes) {\n                        // These values represent the progress into the song/volume bar, and its max value.\n                        // For now, we're supplying arbitrary initial and max values.\n                        scope.value = 0;\n                        scope.max = 200;\n                        var $seekBar = $(element);\n\n                        var percentString = function() {\n                            percent = Number(scope.value) / Number(scope.max) * 100;\n                            return percent + \"%\";\n                        };\n\n                        scope.fillStyle = function() {\n                            return {\n                                width: percentString()\n                            };\n                        };\n\n                        scope.thumbStyle = function() {\n                            return {\n                                left: percentString()\n                            };\n                        };\n\n                        scope.onClickSlider = function(event) {\n                            var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n                            scope.value = percent * scope.max;\n                        };\n\n                        scope.trackThumb = function() {\n                            $document.bind('mousemove.thumb', function(event) {\n                                var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n                                scope.$apply(function() {\n                                    scope.value = percent * scope.max;\n                                });\n                            });\n\n                            //cleanup\n                            $document.bind('mouseup.thumb', function() {\n                                $document.unbind('mousemove.thumb');\n                                $document.unbind('mouseup.thumb');\n                            });\n                        };\n                    }};\n            }]);\n               "," var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n      + '  <div class=\"collection-album-image-container\">'\n      + '    <img src=\"/images/album-placeholder.png\"/>'\n      + '  </div>'\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '    </p>'\n      + '  </div>'\n      + '</div>';\n \n   return $(template);\n };\n\n  var buildAlbumOverlay = function(albumURL) {\n    var template =\n        '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>'\n      ;\n    return $(template);\n  }; \n\n  var updateCollectionView = function() {\n   var $collection = $(\".collection-container .row\");\n   $collection.empty();\n \n   for (var i = 0; i < 33; i++) {\n     var $newThumbnail = buildAlbumThumbnail();\n     $collection.append($newThumbnail);\n   }\n\n  var onHover = function(event) {\n     $(this).append(buildAlbumOverlay(\"/album.html\"));\n   };\n\n  var offHover = function(event) {\n    $(this).find('.collection-album-image-overlay').remove();\n  };\n\n  $collection.find('.collection-album-image-container').hover(onHover, offHover);\n };\n\n\n\n if (document.URL.match(/\\/collection.html/)) {\n   // Wait until the HTML is fully processed.\n   $(document).ready(function() {\n      updateCollectionView();\n   });\n }","  $(document).ready(function() { \n    $('.hero-content h3').click(function(){\n      subText = $(this).text();\n       $(this).text(subText + \"!\");\n    });\n \n   var onHoverAction = function(event) {\n     console.log('Hover action triggered.');\n     $(this).animate({'margin-top': '10px'});\n   };\n \n   var offHoverAction = function(event) {\n     console.log('Off-hover action triggered.');\n     $(this).animate({'margin-top': '0px'});\n   };\n \n    $('.selling-points .point').hover(onHoverAction, offHoverAction);\n    \n  });"," var tabsContainer = \".user-profile-tabs-container\"\n var selectTabHandler = function(event) {\n   $tab = $(this);\n   $(tabsContainer + \" li\").removeClass('active');\n   $tab.parent().addClass('active');\n   selectedTabName = $tab.attr('href');\n   console.log(selectedTabName);\n   $(\".tab-pane\").addClass('hidden');\n   $(selectedTabName).removeClass('hidden');\n   event.preventDefault();\n };\n \n if (document.URL.match(/\\/profile.html/)) {\n   $(document).ready(function() {\n     var $tabs = $(tabsContainer + \" a\");\n     $tabs.click(selectTabHandler);\n     $tabs[0].click();\n   });\n }"]}